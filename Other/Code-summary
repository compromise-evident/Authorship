
Create
	* 512 keys.
	* 512 ciphertext using keys.
	* sha512sum of ciphertext list (your number.)
	* (RAM of sensitive data overwritten.)
	
Modify
	* Prompts user for message to be authenticated with event.
	* Copies ciphertext to new file "public".
	* Loads old keys to RAM.
	* New keys.
	* New ciphertext.
	* sha512sum of new ciphertext list (your new number.)
	* Writes user message to new file "representing_sha512sum_of".
	* Appends new number to file "representing_sha512sum_of".
	* Keeps appending 0s to file "representing_sha512sum_of" until its sha512sum hash is composed of 256 1 bits and 256 0 bits. (16 tries on average.)
	* Appends only 256 old keys to file "public" (based on bits from hash in file "the_sha512sum".)
	* Appends presence & absence indication to file "public".
	* Appends user message and new number to file "public" (all from file "representing_sha512sum_of".)
	* (RAM of sensitive data overwritten.)
	
Verify
	* Takes hash of ciphertext in file "public" and compares it to the number.
	* Loads the 512 ciphertext to RAM.
	* Loads the 256 keys to RAM.
	* Loads the 512 presence & absence indication to RAM.
	* Writes user message & number to file.
	* Takes sha512sum of user message & number file.
	* Decrypts ciphertext to which keys are present.
	* Compares this presence & absence to the bits of the hash of "user message & number file".
	* If compares, saves message from "user message & number file".
	* If compares, overwrites file "number" with the number in "user message & number file".
